  ab[c]
  ab[z]abc
   head : +3
  ab[c]
  abzab[c]
  テキスト4文字目にパターンの先頭をもってくる

  ab[c]
  ab[a]bcd
    head : +2
  ab[c]
  abab[c]d
  テキスト3文字目にパターンの同じ文字をもってくる

  ab[c]
  xx[b]bcd
   head : +1
  ab[c]
  xxb[b]cd
  テキスト3文字目にパターンの同じ文字をもってくる

  ab[c]ab
  ab[z]abcab
   head : +1
  abca[b]
  abzabca[b]
  テキストの4文字目にパターンの先頭をもってくる

  abca[b]
  aabc[a]bcab
   head : +1
  abca[b]
  aabca[b]cab
  テキストの5文字目にパターンの同じ文字 (最右) をもってくる

  a[b]cde
  xxx[d]cde
   head : -2
  abcd[e]
  xxxd[c]de
   head : +2
  abcd[e]
  xxxdcd[e]
・・・ 無限ループ ・・・

  a[b]cde
  xxx[d]cdef
   head : -2 同値が注目点の右側ならば次の処理を実行する
   head : +1
  abcd[e]
  xxxdcde[f]

  011[1]
  111[1]
   success
  01[1]1
  11[1]1
   success
  0[1]11
  1[1]11
   success
  [0]111
  [1]111
   head : +1
  011[1]
  1111[1]
   success
  01[1]1
  111[1]1
   success
  0[1]11
  11[1]11
   success
  [0]111
  1[1]111

  [t]atr
  [t]ata
   success
  t[a]tr
  t[a]ta
   success
  ta[t]r
  ta[t]a
   success
  tat[r]
  tat[a]
   next[3] : +2
  [t]atr
  ta[t]a

  7,3,2,6,1,5 を基数ソートする
  7,3,2,6,1,5 => 111, 011, 010, 110, 001, 101
  a: 基数ソートの計算ステップ
  b: 732615 に対し，それぞれの桁で並びかえたもの

     a              
--------------------
  321765
  000111 
--------------------
  ソートキー: 先頭ビット

      a           b  
--------------------
  153276  157326  
  001111  001111  
--------------------
  ソートキー: 2ビット目

      a           b
--------------------
  261537  267315
  001111  001111
--------------------
  ソートキー: 3ビット目
  基数ソートが終了したところで a がウェーブレット行列を構築している

  732615 にウェーブレット行列を適用する

  [1,4)      (4,7]  :区間
  ----------------------------
  [3][2][1]  765
  [0][0][0]  111
  ----------------------------
  ソートキー: 1ビット目

  ----------------------------
  [3][2]<[1]>  76<5>
  [1][1]<[0]>  11<0>
  ----------------------------
  途中経過 ―それぞれの2ビット目

  --------------------
  ]<[1]>  _<5>   [3][2]<  76_   
  ]<[0]>  _<0>   [1][1]<  11_   
  --------------------
  ソートキー: 2ビット目

  ----------------------------
  ]<[1]>  _<5>   [3][2]<  76_   
  ]<[1]>  _<1>   [1][0]<  10_   
  ----------------------------
  途中経過 ―それぞれの3ビット目

    a       b       c       d      e      f
  ----------------------------
  [2]<    6_   ]<[1]>  _<5>   [3]    7   
  [0]<    0_   ]<[1]>  _<1>   [1]    1   
  ----------------------------
  ソートキー: 3ビット目 (終)

  732615 access操作
  access(4) = 1 の導出
  1 => 001
  a: 0ビット
  b: 1ビット
       a         b
  ----------------------------
  [3][2][1]  765
  [0][0][0]  111
  ----------------------------
  ソートキー: 1ビット目
  先頭のビットは 0 であるから，[1] は a に属する
        a            b
  ----------------------------
  [3][2]<[1]>  76<5>
  [1][1]<[0]>  11<0>
  ----------------------------
  途中経過 ―それぞれの2ビット目
  <[1]> より左に [3]，[2] がある
  [3]，[2] は 次のソートで b に属するから，衝突しない

        a                b
  -----------------------
  ]<[1]>  _<5>   [3][2]<  76_   
  ]<[0]>  _<0>   [1][1]<  11_   
  -----------------------
  ソートキー: 2ビット目
  2つ目のビットは 0 であるから，]<[0]> は a に属する

  ----------------------------
  ]<[1]>  _<5>   [3][2]<  76_   
  ]<[1]>  _<1>   [1][0]<  10_   
  ----------------------------
  途中経過 ―それぞれの3ビット目
  ]<[1]> は先頭要素であるから，衝突しない　あらま～・・
  
         a                    b
  ----------------------------
  [2]<    6_   ]<[1]>  _<5>   [3]    7   
  [0]<    0_   ]<[1]>  _<1>   [1]    1   
  ----------------------------
  ソートキー: 3ビット目 (終)
  最後のビットは 1 であるから，]<[1]> は b に属する
  b の先頭要素が ]<[1]> である

  732615 rank操作
  rank(3，4) = 1 の導出
  ----------------------------
  7326 | 15 ← 1，5は範囲外
  1001 | 01
  ----------------------------
  3 => 011
  先頭のビットは 0 であるから，4ビット目までの 0 を数え上げる
  e = rank(0，4) = 2 (候補: 2つ)
  
  A: 0ビット
  B: 1ビット
   A     B
  ----------------------------
  321  765
  000  111  :1ビット目
  110  110  :2ビット目
  ----------------------------
  ソートキー: 1ビット目
  3 は A に属する
  a = rank(0，4) = 3 (Aの個数)
  e = rank(1，a) = 2  (a にある 2ビット目が1のものの個数 = 候補: 2つ)

   A     B
  -----------------------
  15   3276   
  00   1111
  -----------------------
  ソートキー: 2ビット目
  3 は B に属する
  a = rank(0，6) = 2
  e = rank(1，a + e) - rank(1，a) = 3 - 2 = 1 (候補: 1つ)
  return e

